//
// Copyright Â© 2021 Celestia Development Team. All rights reserved.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//

import "CelestiaStar.idl";
import "CelestiaBody.idl";
import "CelestiaBrowserItem.idl";
import "CelestiaSelection.idl";
import "CelestiaStarCatalog.idl";
import "CelestiaDSOCatalog.idl";
import "CelestiaStarBrowser.idl";

namespace CelestiaComponent
{
    enum CelestiaMarkerRepresentation
    { 
        Diamond = 0,
        Triangle = 1,
        Square = 2,
        FilledSquare = 3,
        Plus = 4,
        X = 5,
        LeftArrow = 6,
        RightArrow = 7,
        UpArrow = 8,
        DownArrow = 9,
        Circle = 10,
        Disk = 11,
        Crosshair = 12,
    };

    [default_interface]
    runtimeclass CelestiaUniverse
    {
        CelestiaSelection Find(String name);
        String NameForSelection(CelestiaSelection selection);

        Boolean IsSelectionMarked(CelestiaSelection selection);
        void MarkSelection(CelestiaSelection selection, CelestiaMarkerRepresentation marker);
        void UnmarkSelection(CelestiaSelection selection);
        void UnmarkAll();

        CelestiaBrowserItem[] ChildrenForStar(CelestiaStar star, CelestiaBrowserItemChildrenProvider provider);
        CelestiaBrowserItem[] ChildrenForBody(CelestiaBody body, CelestiaBrowserItemChildrenProvider provider);

        CelestiaStarCatalog StarCatalog{ get; };
        CelestiaDSOCatalog DSOCatalog{ get; };
        CelestiaStarBrowser StarBrowser(CelestiaStarBrowserType type);
    }
}
