resources:
 repositories:
  - repository: Celestia
    type: github
    ref: angle
    endpoint: GithubAuth
    name: levinli303/Celestia
  - repository: vcpkg-prebuilt
    type: git
    name: vcpkg-prebuilt

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- checkout: vcpkg-prebuilt
- checkout: Celestia
  submodules: true
- checkout: self
  submodules: true

- script: |
    cd CelestiaUWP
    git config --global user.email "name@name.com"
    git config --global user.name "Name Name"
    git cherry-pick origin/nupkg-dependencies
  displayName: 'Cherry-Pick Pre-built Nuget Changes'

- task: NuGetToolInstaller@1
  displayName: 'Install Nuget'

- task: NuGetCommand@2
  inputs:
    command: custom
    arguments: 'install vcpkg-export-20210528-210617 -source $(System.DefaultWorkingDirectory)/vcpkg-prebuilt -OutputDirectory CelestiaUWP/packages'
  displayName: 'Install Pre-built Nuget Packages'

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
  displayName: 'Restore Solution'

- task: DownloadSecureFile@1
  name: signingCert
  displayName: 'Download CA certificate'
  inputs:
    secureFile: '3d.pfx'

- task: VSBuild@1
  inputs:
    platform: 'x64'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)"
                  /p:AppxPackageDir="$(appxPackageDir)" 
                  /p:AppxBundle=Always 
                  /p:UapAppxPackageBuildMode=StoreUpload 
                  /p:AppxPackageSigningEnabled=true
                  /p:PackageCertificateThumbprint="" 
                  /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)"'
  displayName: 'Build'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  