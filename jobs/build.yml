jobs:
- job: Build
  displayName: 'Build'
  pool:
    vmImage: 'windows-latest'

  variables:
    solution: '**/*.sln'
    buildPlatform: ${{ parameters.platform }}
    buildConfiguration: 'Release'

  steps:
  - checkout: vcpkg-prebuilt
  - checkout: Celestia
    submodules: true
  - checkout: self
    submodules: true

  - script: |
      cd CelestiaUWP
      git config --global user.email "name@name.com"
      git config --global user.name "Name Name"
      git cherry-pick origin/nupkg-dependencies
    displayName: 'Cherry-Pick Pre-built Nuget Changes'

  - script: |
      call "$(System.DefaultWorkingDirectory)\CelestiaUWP\CelestiaUWP\copy_general_data.bat" "$(System.DefaultWorkingDirectory)\CelestiaUWP\CelestiaUWP\" "$(System.DefaultWorkingDirectory)\CelestiaUWP\CelestiaUWP\Resources"
    displayName: 'Copy General Data'

  - script: |
      call "$(System.DefaultWorkingDirectory)\CelestiaUWP\CelestiaUWP\convert_po.bat" "$(System.DefaultWorkingDirectory)\CelestiaUWP\CelestiaUWP\" "$(System.DefaultWorkingDirectory)\CelestiaUWP\CelestiaUWP\Resources"
    displayName: 'Convert POs'

  - task: NuGetToolInstaller@1
    displayName: 'Install Nuget'

  - task: NuGetCommand@2
    inputs:
      command: custom
      arguments: 'install vcpkg-export-20210528-210617 -source $(System.DefaultWorkingDirectory)/vcpkg-prebuilt -OutputDirectory CelestiaUWP/packages'
    displayName: 'Install Pre-built Nuget Packages'

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'
    displayName: 'Restore Solution'

  - task: VSBuild@1
    inputs:
      platform: $(buildPlatform)
      solution: '$(solution)'
      configuration: '$(buildConfiguration)'
      msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)"
                    /p:AppxPackageOutput=$(Build.ArtifactStagingDirectory)\Celestia-$(buildPlatform).msix
                    /p:AppxBundle=Never
                    /p:UapAppxPackageBuildMode=StoreUpload
                    /p:AppxPackageSigningEnabled=false'
    displayName: 'Build'

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**\bin\$(BuildConfiguration)\**'
      TargetFolder: '$(build.artifactstagingdirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)\Celestia-$(buildPlatform).msix'
      ArtifactName: Celestia-$(buildPlatform).msix
      publishLocation: Container
